name: Build .NET APP

on:
  push:
    branches: 
      - "main"
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
  docker:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Login to Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Azure Login
        uses: azure/login@v1
        if: github.event_name == 'tags'
        with:
          client-id: ${{ secrets.BACKENDHELLO_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.BACKENDHELLO_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.BACKENDHELLO_AZURE_SUBSCRIPTION_ID }}
    
      - name: Build and push container image to registry
        uses: azure/container-apps-deploy-action@v2
        if: github.event_name == 'tags'
        with:
          appSourcePath: ${{ github.workspace }} 
          registryUrl: ${{ env.REGISTRY }}
          registryUsername: ${{ github.actor }}
          registryPassword: ${{ secrets.GITHUB_TOKEN }}
          containerAppName: backend-hello
          resourceGroup: Hello
          imageToBuild: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          _buildArgumentsKey_: |
            _buildArgumentsValues_
